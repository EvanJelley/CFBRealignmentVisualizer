# Generated by Django 5.0.6 on 2024-06-17 21:23

from django.db import migrations
import os
import sqlite3

def addSummaryData(apps, schema_editor):
    ConferenceByYear = apps.get_model('conferences', 'ConferenceByYear')
    MajorCity = apps.get_model('conferences', 'MajorCity')
    Conference = apps.get_model('conferences', 'ConferenceName')
    Year = apps.get_model('conferences', 'Year')

    db_path = os.path.join("ConferenceByEraDB", "ConferenceSummary.db")
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    tables = cursor.execute("SELECT name FROM sqlite_master WHERE type='table';").fetchall()
    for table in tables:
        table_name = table[0]
        cursor.execute("SELECT * FROM " + table_name)
        for row in cursor.fetchall():
            conference = row[0]
            conference_obj = Conference.objects.get(name=conference)
            startYear = int(row[1].split("-")[0])
            if row[1].split("-")[1] != "Present":
                endYear = int(row[1].split("-")[1]) - 1
            else:
                endYear = 2024
            if row[2] == "All":
                football = True
                basketball = True
            elif row[2] == "Football":
                football = True
                basketball = False
            elif row[2] == "Basketball":
                football = False
                basketball = True
            centerLat = row[3]
            centerLon = row[4]
            capitalCity = row[5].split(",")[0].strip()
            capitalState = row[5].split(",")[1].strip()
            if not MajorCity.objects.filter(name=capitalCity).exists():
                MajorCity.objects.create(name=capitalCity, state=capitalState, latitude=row[6], longitude=row[7])
            avgDistanceFromCenter = row[8]
            avgDistanceBetweenSchools = row[9]
            for year in range(startYear, endYear + 1):
                year_obj = Year.objects.get(year=year)
                conf = ConferenceByYear.objects.get(conference=conference_obj.id, year=year_obj, football=football, basketball=basketball)
                conf.centerLat = centerLat
                conf.centerLon = centerLon
                conf.capital = MajorCity.objects.get(name=capitalCity)
                conf.avgDistanceFromCenter = avgDistanceFromCenter
                conf.avgDistanceBetweenSchools = avgDistanceBetweenSchools
                conf.save()
    conn.close()


class Migration(migrations.Migration):

    dependencies = [
        ('conferences', '0009_auto_20240617_2103'),
    ]

    operations = [
        migrations.RunPython(addSummaryData),
    ]
